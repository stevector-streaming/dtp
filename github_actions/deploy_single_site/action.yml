name: deploy-to-pantheon
inputs:
  pantheon_ssh_key:
    description: ' '
    required: true

  terminus_machine_token:
    description: ' '
    required: true

  pantheon_site:
    description: ' '
    required: true

  target_env:
    description: ' '
    required: true

  relative_site_root:
    description: "The root directory of the site to be deployed relative to the repository root. The vast majority of users of this action should leave this value unchanged from the default. The action will use this value to change directories after checking out the repo."
    required: false

## todo
## git email
## git name


runs:
    using: 'composite'
    steps:

      - name: start deployment
        uses: bobheadxi/deployments@v1
        id: deployment
        with:
          step: start
          token: ${{ github.token }}
          env: ${{ inputs.target_env }}
          ref: ${{ github.head_ref }}

      - uses: webfactory/ssh-agent@v0.9.0
        with:
            ssh-private-key: ${{ inputs.pantheon_ssh_key }}

      # todo, make checkout conditional.
      # Consumers might have checked out before calling this
      # composite action.



      - name: Install Terminus
        uses: pantheon-systems/terminus-github-actions@main
        with:
          pantheon-machine-token: ${{ inputs.terminus_machine_token }}


      - name: Install Terminus Plugin
        shell: bash
        run: |
          #!/bin/bash
          set +e
          terminus self:plugin:install "${{ github.action_path }}/../../terminus-build-tools-plugin"

# use site_relative_root in here somewhere. But yikes. Do we also need to create a whole history?
# I'm back to wanting to clone from Pantheon and move the current working directory on top of this dir.
# I could clone Pantheon into a local tmp dir. Check out the given branch (make it if it doesn't exist)
# then move the .git over here. commit and push. Hey that would get rid of the need to unshallow.


      - name: Deployment Processing
        shell: bash
        env:
          PANTHEON_SITE: ${{ inputs.pantheon_site }}
          TARGET_ENV: ${{ inputs.target_env }}
          SITE_ROOT: ${{ inputs.relative_site_root }}
        run: |
          #!/bin/bash
          set +e


          cd ${SITE_ROOT}


          echo "todo, add optional arguments to the action for these git config values."
          git config --global user.email "GitHubAction@example.com"
          git config --global user.name "GitHub Action"
          export TERMINUS_BUILD_TOOLS_WORKFLOW_TIMEOUT=300

          git init
          git checkout -b ${TARGET_ENV}
          git add .
          git commit -m 'what will this do'

          terminus -n build:env:create $PANTHEON_SITE.live ${TARGET_ENV} --yes

      - name: Update deployment status
        uses: bobheadxi/deployments@v1
        if: always()
        with:
          step: finish
          token: ${{ github.token }}
          status: ${{ job.status }}
          ref: ${{ github.head_ref }}
          # todo, how does this work when there is a step above with the id of "deployment" not "deployment_id"
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
          # todo, the site machine name will need to go in the env name.
          env: ${{ inputs.target_env }}-${{ inputs.pantheon_site }}
          env_url: https://${{ inputs.target_env }}-${{ inputs.pantheon_site }}.pantheonsite.io
